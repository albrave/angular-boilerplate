{
  "version": 3,
  "sources": ["../../../../../node_modules/@firebase/auth/dist/esm2017/internal.js", "../../../../../node_modules/@firebase/auth-compat/dist/index.esm2017.js"],
  "sourcesContent": ["import { au as debugAssert, av as _isIOS, aw as _isAndroid, ax as _fail, ay as _getRedirectUrl, az as _getProjectConfig, aA as _isIOS7Or8, aB as _createError, aC as _assert, aD as AuthEventManager, aE as _getInstance, b as browserLocalPersistence, aF as _persistenceKeyName, a as browserSessionPersistence, aG as _getRedirectResult, aH as _overrideRedirectResult, aI as _clearRedirectOutcomes, aJ as _castAuth } from './index-bea2a320.js';\nexport { A as ActionCodeOperation, ai as ActionCodeURL, L as AuthCredential, I as AuthErrorCodes, aL as AuthImpl, aO as AuthPopup, M as EmailAuthCredential, V as EmailAuthProvider, W as FacebookAuthProvider, F as FactorId, aP as FetchProvider, Y as GithubAuthProvider, X as GoogleAuthProvider, N as OAuthCredential, Z as OAuthProvider, O as OperationType, Q as PhoneAuthCredential, P as PhoneAuthProvider, m as PhoneMultiFactorGenerator, p as ProviderId, R as RecaptchaVerifier, aQ as SAMLAuthCredential, _ as SAMLAuthProvider, S as SignInMethod, T as TotpMultiFactorGenerator, n as TotpSecret, $ as TwitterAuthProvider, aK as UserImpl, aC as _assert, aJ as _castAuth, ax as _fail, aN as _generateEventId, aM as _getClientVersion, aE as _getInstance, aG as _getRedirectResult, aH as _overrideRedirectResult, aF as _persistenceKeyName, a7 as applyActionCode, x as beforeAuthStateChanged, b as browserLocalPersistence, k as browserPopupRedirectResolver, a as browserSessionPersistence, a8 as checkActionCode, a6 as confirmPasswordReset, K as connectAuthEmulator, aa as createUserWithEmailAndPassword, G as debugErrorMap, E as deleteUser, af as fetchSignInMethodsForEmail, aq as getAdditionalUserInfo, o as getAuth, an as getIdToken, ao as getIdTokenResult, as as getMultiFactorResolver, j as getRedirectResult, U as inMemoryPersistence, i as indexedDBLocalPersistence, J as initializeAuth, t as initializeRecaptchaConfig, ad as isSignInWithEmailLink, a2 as linkWithCredential, l as linkWithPhoneNumber, d as linkWithPopup, g as linkWithRedirect, at as multiFactor, y as onAuthStateChanged, w as onIdTokenChanged, aj as parseActionCodeURL, H as prodErrorMap, a3 as reauthenticateWithCredential, r as reauthenticateWithPhoneNumber, e as reauthenticateWithPopup, h as reauthenticateWithRedirect, ar as reload, D as revokeAccessToken, ag as sendEmailVerification, a5 as sendPasswordResetEmail, ac as sendSignInLinkToEmail, q as setPersistence, a0 as signInAnonymously, a1 as signInWithCredential, a4 as signInWithCustomToken, ab as signInWithEmailAndPassword, ae as signInWithEmailLink, s as signInWithPhoneNumber, c as signInWithPopup, f as signInWithRedirect, C as signOut, ap as unlink, B as updateCurrentUser, al as updateEmail, am as updatePassword, u as updatePhoneNumber, ak as updateProfile, z as useDeviceLanguage, v as validatePassword, ah as verifyBeforeUpdateEmail, a9 as verifyPasswordResetCode } from './index-bea2a320.js';\nimport { querystringDecode } from '@firebase/util';\nimport '@firebase/app';\nimport '@firebase/logger';\nimport 'tslib';\nimport '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _cordovaWindow() {\r\n    return window;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * How long to wait after the app comes back into focus before concluding that\r\n * the user closed the sign in tab.\r\n */\r\nconst REDIRECT_TIMEOUT_MS = 2000;\r\n/**\r\n * Generates the URL for the OAuth handler.\r\n */\r\nasync function _generateHandlerUrl(auth, event, provider) {\r\n    var _a;\r\n    // Get the cordova plugins\r\n    const { BuildInfo } = _cordovaWindow();\r\n    debugAssert(event.sessionId, 'AuthEvent did not contain a session ID');\r\n    const sessionDigest = await computeSha256(event.sessionId);\r\n    const additionalParams = {};\r\n    if (_isIOS()) {\r\n        // iOS app identifier\r\n        additionalParams['ibi'] = BuildInfo.packageName;\r\n    }\r\n    else if (_isAndroid()) {\r\n        // Android app identifier\r\n        additionalParams['apn'] = BuildInfo.packageName;\r\n    }\r\n    else {\r\n        _fail(auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    // Add the display name if available\r\n    if (BuildInfo.displayName) {\r\n        additionalParams['appDisplayName'] = BuildInfo.displayName;\r\n    }\r\n    // Attached the hashed session ID\r\n    additionalParams['sessionId'] = sessionDigest;\r\n    return _getRedirectUrl(auth, provider, event.type, undefined, (_a = event.eventId) !== null && _a !== void 0 ? _a : undefined, additionalParams);\r\n}\r\n/**\r\n * Validates that this app is valid for this project configuration\r\n */\r\nasync function _validateOrigin(auth) {\r\n    const { BuildInfo } = _cordovaWindow();\r\n    const request = {};\r\n    if (_isIOS()) {\r\n        request.iosBundleId = BuildInfo.packageName;\r\n    }\r\n    else if (_isAndroid()) {\r\n        request.androidPackageName = BuildInfo.packageName;\r\n    }\r\n    else {\r\n        _fail(auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    // Will fail automatically if package name is not authorized\r\n    await _getProjectConfig(auth, request);\r\n}\r\nfunction _performRedirect(handlerUrl) {\r\n    // Get the cordova plugins\r\n    const { cordova } = _cordovaWindow();\r\n    return new Promise(resolve => {\r\n        cordova.plugins.browsertab.isAvailable(browserTabIsAvailable => {\r\n            let iabRef = null;\r\n            if (browserTabIsAvailable) {\r\n                cordova.plugins.browsertab.openUrl(handlerUrl);\r\n            }\r\n            else {\r\n                // TODO: Return the inappbrowser ref that's returned from the open call\r\n                iabRef = cordova.InAppBrowser.open(handlerUrl, _isIOS7Or8() ? '_blank' : '_system', 'location=yes');\r\n            }\r\n            resolve(iabRef);\r\n        });\r\n    });\r\n}\r\n/**\r\n * This function waits for app activity to be seen before resolving. It does\r\n * this by attaching listeners to various dom events. Once the app is determined\r\n * to be visible, this promise resolves. AFTER that resolution, the listeners\r\n * are detached and any browser tabs left open will be closed.\r\n */\r\nasync function _waitForAppResume(auth, eventListener, iabRef) {\r\n    // Get the cordova plugins\r\n    const { cordova } = _cordovaWindow();\r\n    let cleanup = () => { };\r\n    try {\r\n        await new Promise((resolve, reject) => {\r\n            let onCloseTimer = null;\r\n            // DEFINE ALL THE CALLBACKS =====\r\n            function authEventSeen() {\r\n                var _a;\r\n                // Auth event was detected. Resolve this promise and close the extra\r\n                // window if it's still open.\r\n                resolve();\r\n                const closeBrowserTab = (_a = cordova.plugins.browsertab) === null || _a === void 0 ? void 0 : _a.close;\r\n                if (typeof closeBrowserTab === 'function') {\r\n                    closeBrowserTab();\r\n                }\r\n                // Close inappbrowser emebedded webview in iOS7 and 8 case if still\r\n                // open.\r\n                if (typeof (iabRef === null || iabRef === void 0 ? void 0 : iabRef.close) === 'function') {\r\n                    iabRef.close();\r\n                }\r\n            }\r\n            function resumed() {\r\n                if (onCloseTimer) {\r\n                    // This code already ran; do not rerun.\r\n                    return;\r\n                }\r\n                onCloseTimer = window.setTimeout(() => {\r\n                    // Wait two seeconds after resume then reject.\r\n                    reject(_createError(auth, \"redirect-cancelled-by-user\" /* AuthErrorCode.REDIRECT_CANCELLED_BY_USER */));\r\n                }, REDIRECT_TIMEOUT_MS);\r\n            }\r\n            function visibilityChanged() {\r\n                if ((document === null || document === void 0 ? void 0 : document.visibilityState) === 'visible') {\r\n                    resumed();\r\n                }\r\n            }\r\n            // ATTACH ALL THE LISTENERS =====\r\n            // Listen for the auth event\r\n            eventListener.addPassiveListener(authEventSeen);\r\n            // Listen for resume and visibility events\r\n            document.addEventListener('resume', resumed, false);\r\n            if (_isAndroid()) {\r\n                document.addEventListener('visibilitychange', visibilityChanged, false);\r\n            }\r\n            // SETUP THE CLEANUP FUNCTION =====\r\n            cleanup = () => {\r\n                eventListener.removePassiveListener(authEventSeen);\r\n                document.removeEventListener('resume', resumed, false);\r\n                document.removeEventListener('visibilitychange', visibilityChanged, false);\r\n                if (onCloseTimer) {\r\n                    window.clearTimeout(onCloseTimer);\r\n                }\r\n            };\r\n        });\r\n    }\r\n    finally {\r\n        cleanup();\r\n    }\r\n}\r\n/**\r\n * Checks the configuration of the Cordova environment. This has no side effect\r\n * if the configuration is correct; otherwise it throws an error with the\r\n * missing plugin.\r\n */\r\nfunction _checkCordovaConfiguration(auth) {\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\r\n    const win = _cordovaWindow();\r\n    // Check all dependencies installed.\r\n    // https://github.com/nordnet/cordova-universal-links-plugin\r\n    // Note that cordova-universal-links-plugin has been abandoned.\r\n    // A fork with latest fixes is available at:\r\n    // https://www.npmjs.com/package/cordova-universal-links-plugin-fix\r\n    _assert(typeof ((_a = win === null || win === void 0 ? void 0 : win.universalLinks) === null || _a === void 0 ? void 0 : _a.subscribe) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-universal-links-plugin-fix'\r\n    });\r\n    // https://www.npmjs.com/package/cordova-plugin-buildinfo\r\n    _assert(typeof ((_b = win === null || win === void 0 ? void 0 : win.BuildInfo) === null || _b === void 0 ? void 0 : _b.packageName) !== 'undefined', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-buildInfo'\r\n    });\r\n    // https://github.com/google/cordova-plugin-browsertab\r\n    _assert(typeof ((_e = (_d = (_c = win === null || win === void 0 ? void 0 : win.cordova) === null || _c === void 0 ? void 0 : _c.plugins) === null || _d === void 0 ? void 0 : _d.browsertab) === null || _e === void 0 ? void 0 : _e.openUrl) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-browsertab'\r\n    });\r\n    _assert(typeof ((_h = (_g = (_f = win === null || win === void 0 ? void 0 : win.cordova) === null || _f === void 0 ? void 0 : _f.plugins) === null || _g === void 0 ? void 0 : _g.browsertab) === null || _h === void 0 ? void 0 : _h.isAvailable) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-browsertab'\r\n    });\r\n    // https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-inappbrowser/\r\n    _assert(typeof ((_k = (_j = win === null || win === void 0 ? void 0 : win.cordova) === null || _j === void 0 ? void 0 : _j.InAppBrowser) === null || _k === void 0 ? void 0 : _k.open) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-inappbrowser'\r\n    });\r\n}\r\n/**\r\n * Computes the SHA-256 of a session ID. The SubtleCrypto interface is only\r\n * available in \"secure\" contexts, which covers Cordova (which is served on a file\r\n * protocol).\r\n */\r\nasync function computeSha256(sessionId) {\r\n    const bytes = stringToArrayBuffer(sessionId);\r\n    // TODO: For IE11 crypto has a different name and this operation comes back\r\n    //       as an object, not a promise. This is the old proposed standard that\r\n    //       is used by IE11:\r\n    // https://www.w3.org/TR/2013/WD-WebCryptoAPI-20130108/#cryptooperation-interface\r\n    const buf = await crypto.subtle.digest('SHA-256', bytes);\r\n    const arr = Array.from(new Uint8Array(buf));\r\n    return arr.map(num => num.toString(16).padStart(2, '0')).join('');\r\n}\r\nfunction stringToArrayBuffer(str) {\r\n    // This function is only meant to deal with an ASCII charset and makes\r\n    // certain simplifying assumptions.\r\n    debugAssert(/[0-9a-zA-Z]+/.test(str), 'Can only convert alpha-numeric strings');\r\n    if (typeof TextEncoder !== 'undefined') {\r\n        return new TextEncoder().encode(str);\r\n    }\r\n    const buff = new ArrayBuffer(str.length);\r\n    const view = new Uint8Array(buff);\r\n    for (let i = 0; i < str.length; i++) {\r\n        view[i] = str.charCodeAt(i);\r\n    }\r\n    return view;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst SESSION_ID_LENGTH = 20;\r\n/** Custom AuthEventManager that adds passive listeners to events */\r\nclass CordovaAuthEventManager extends AuthEventManager {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.passiveListeners = new Set();\r\n        this.initPromise = new Promise(resolve => {\r\n            this.resolveInialized = resolve;\r\n        });\r\n    }\r\n    addPassiveListener(cb) {\r\n        this.passiveListeners.add(cb);\r\n    }\r\n    removePassiveListener(cb) {\r\n        this.passiveListeners.delete(cb);\r\n    }\r\n    // In a Cordova environment, this manager can live through multiple redirect\r\n    // operations\r\n    resetRedirect() {\r\n        this.queuedRedirectEvent = null;\r\n        this.hasHandledPotentialRedirect = false;\r\n    }\r\n    /** Override the onEvent method */\r\n    onEvent(event) {\r\n        this.resolveInialized();\r\n        this.passiveListeners.forEach(cb => cb(event));\r\n        return super.onEvent(event);\r\n    }\r\n    async initialized() {\r\n        await this.initPromise;\r\n    }\r\n}\r\n/**\r\n * Generates a (partial) {@link AuthEvent}.\r\n */\r\nfunction _generateNewEvent(auth, type, eventId = null) {\r\n    return {\r\n        type,\r\n        eventId,\r\n        urlResponse: null,\r\n        sessionId: generateSessionId(),\r\n        postBody: null,\r\n        tenantId: auth.tenantId,\r\n        error: _createError(auth, \"no-auth-event\" /* AuthErrorCode.NO_AUTH_EVENT */)\r\n    };\r\n}\r\nfunction _savePartialEvent(auth, event) {\r\n    return storage()._set(persistenceKey(auth), event);\r\n}\r\nasync function _getAndRemoveEvent(auth) {\r\n    const event = (await storage()._get(persistenceKey(auth)));\r\n    if (event) {\r\n        await storage()._remove(persistenceKey(auth));\r\n    }\r\n    return event;\r\n}\r\nfunction _eventFromPartialAndUrl(partialEvent, url) {\r\n    var _a, _b;\r\n    // Parse the deep link within the dynamic link URL.\r\n    const callbackUrl = _getDeepLinkFromCallback(url);\r\n    // Confirm it is actually a callback URL.\r\n    // Currently the universal link will be of this format:\r\n    // https://<AUTH_DOMAIN>/__/auth/callback<OAUTH_RESPONSE>\r\n    // This is a fake URL but is not intended to take the user anywhere\r\n    // and just redirect to the app.\r\n    if (callbackUrl.includes('/__/auth/callback')) {\r\n        // Check if there is an error in the URL.\r\n        // This mechanism is also used to pass errors back to the app:\r\n        // https://<AUTH_DOMAIN>/__/auth/callback?firebaseError=<STRINGIFIED_ERROR>\r\n        const params = searchParamsOrEmpty(callbackUrl);\r\n        // Get the error object corresponding to the stringified error if found.\r\n        const errorObject = params['firebaseError']\r\n            ? parseJsonOrNull(decodeURIComponent(params['firebaseError']))\r\n            : null;\r\n        const code = (_b = (_a = errorObject === null || errorObject === void 0 ? void 0 : errorObject['code']) === null || _a === void 0 ? void 0 : _a.split('auth/')) === null || _b === void 0 ? void 0 : _b[1];\r\n        const error = code ? _createError(code) : null;\r\n        if (error) {\r\n            return {\r\n                type: partialEvent.type,\r\n                eventId: partialEvent.eventId,\r\n                tenantId: partialEvent.tenantId,\r\n                error,\r\n                urlResponse: null,\r\n                sessionId: null,\r\n                postBody: null\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                type: partialEvent.type,\r\n                eventId: partialEvent.eventId,\r\n                tenantId: partialEvent.tenantId,\r\n                sessionId: partialEvent.sessionId,\r\n                urlResponse: callbackUrl,\r\n                postBody: null\r\n            };\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction generateSessionId() {\r\n    const chars = [];\r\n    const allowedChars = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    for (let i = 0; i < SESSION_ID_LENGTH; i++) {\r\n        const idx = Math.floor(Math.random() * allowedChars.length);\r\n        chars.push(allowedChars.charAt(idx));\r\n    }\r\n    return chars.join('');\r\n}\r\nfunction storage() {\r\n    return _getInstance(browserLocalPersistence);\r\n}\r\nfunction persistenceKey(auth) {\r\n    return _persistenceKeyName(\"authEvent\" /* KeyName.AUTH_EVENT */, auth.config.apiKey, auth.name);\r\n}\r\nfunction parseJsonOrNull(json) {\r\n    try {\r\n        return JSON.parse(json);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n}\r\n// Exported for testing\r\nfunction _getDeepLinkFromCallback(url) {\r\n    const params = searchParamsOrEmpty(url);\r\n    const link = params['link'] ? decodeURIComponent(params['link']) : undefined;\r\n    // Double link case (automatic redirect)\r\n    const doubleDeepLink = searchParamsOrEmpty(link)['link'];\r\n    // iOS custom scheme links.\r\n    const iOSDeepLink = params['deep_link_id']\r\n        ? decodeURIComponent(params['deep_link_id'])\r\n        : undefined;\r\n    const iOSDoubleDeepLink = searchParamsOrEmpty(iOSDeepLink)['link'];\r\n    return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\r\n}\r\n/**\r\n * Optimistically tries to get search params from a string, or else returns an\r\n * empty search params object.\r\n */\r\nfunction searchParamsOrEmpty(url) {\r\n    if (!(url === null || url === void 0 ? void 0 : url.includes('?'))) {\r\n        return {};\r\n    }\r\n    const [_, ...rest] = url.split('?');\r\n    return querystringDecode(rest.join('?'));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * How long to wait for the initial auth event before concluding no\r\n * redirect pending\r\n */\r\nconst INITIAL_EVENT_TIMEOUT_MS = 500;\r\nclass CordovaPopupRedirectResolver {\r\n    constructor() {\r\n        this._redirectPersistence = browserSessionPersistence;\r\n        this._shouldInitProactively = true; // This is lightweight for Cordova\r\n        this.eventManagers = new Map();\r\n        this.originValidationPromises = {};\r\n        this._completeRedirectFn = _getRedirectResult;\r\n        this._overrideRedirectResult = _overrideRedirectResult;\r\n    }\r\n    async _initialize(auth) {\r\n        const key = auth._key();\r\n        let manager = this.eventManagers.get(key);\r\n        if (!manager) {\r\n            manager = new CordovaAuthEventManager(auth);\r\n            this.eventManagers.set(key, manager);\r\n            this.attachCallbackListeners(auth, manager);\r\n        }\r\n        return manager;\r\n    }\r\n    _openPopup(auth) {\r\n        _fail(auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    async _openRedirect(auth, provider, authType, eventId) {\r\n        _checkCordovaConfiguration(auth);\r\n        const manager = await this._initialize(auth);\r\n        await manager.initialized();\r\n        // Reset the persisted redirect states. This does not matter on Web where\r\n        // the redirect always blows away application state entirely. On Cordova,\r\n        // the app maintains control flow through the redirect.\r\n        manager.resetRedirect();\r\n        _clearRedirectOutcomes();\r\n        await this._originValidation(auth);\r\n        const event = _generateNewEvent(auth, authType, eventId);\r\n        await _savePartialEvent(auth, event);\r\n        const url = await _generateHandlerUrl(auth, event, provider);\r\n        const iabRef = await _performRedirect(url);\r\n        return _waitForAppResume(auth, manager, iabRef);\r\n    }\r\n    _isIframeWebStorageSupported(_auth, _cb) {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    _originValidation(auth) {\r\n        const key = auth._key();\r\n        if (!this.originValidationPromises[key]) {\r\n            this.originValidationPromises[key] = _validateOrigin(auth);\r\n        }\r\n        return this.originValidationPromises[key];\r\n    }\r\n    attachCallbackListeners(auth, manager) {\r\n        // Get the global plugins\r\n        const { universalLinks, handleOpenURL, BuildInfo } = _cordovaWindow();\r\n        const noEventTimeout = setTimeout(async () => {\r\n            // We didn't see that initial event. Clear any pending object and\r\n            // dispatch no event\r\n            await _getAndRemoveEvent(auth);\r\n            manager.onEvent(generateNoEvent());\r\n        }, INITIAL_EVENT_TIMEOUT_MS);\r\n        const universalLinksCb = async (eventData) => {\r\n            // We have an event so we can clear the no event timeout\r\n            clearTimeout(noEventTimeout);\r\n            const partialEvent = await _getAndRemoveEvent(auth);\r\n            let finalEvent = null;\r\n            if (partialEvent && (eventData === null || eventData === void 0 ? void 0 : eventData['url'])) {\r\n                finalEvent = _eventFromPartialAndUrl(partialEvent, eventData['url']);\r\n            }\r\n            // If finalEvent is never filled, trigger with no event\r\n            manager.onEvent(finalEvent || generateNoEvent());\r\n        };\r\n        // Universal links subscriber doesn't exist for iOS, so we need to check\r\n        if (typeof universalLinks !== 'undefined' &&\r\n            typeof universalLinks.subscribe === 'function') {\r\n            universalLinks.subscribe(null, universalLinksCb);\r\n        }\r\n        // iOS 7 or 8 custom URL schemes.\r\n        // This is also the current default behavior for iOS 9+.\r\n        // For this to work, cordova-plugin-customurlscheme needs to be installed.\r\n        // https://github.com/EddyVerbruggen/Custom-URL-scheme\r\n        // Do not overwrite the existing developer's URL handler.\r\n        const existingHandleOpenURL = handleOpenURL;\r\n        const packagePrefix = `${BuildInfo.packageName.toLowerCase()}://`;\r\n        _cordovaWindow().handleOpenURL = async (url) => {\r\n            if (url.toLowerCase().startsWith(packagePrefix)) {\r\n                // We want this intentionally to float\r\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                universalLinksCb({ url });\r\n            }\r\n            // Call the developer's handler if it is present.\r\n            if (typeof existingHandleOpenURL === 'function') {\r\n                try {\r\n                    existingHandleOpenURL(url);\r\n                }\r\n                catch (e) {\r\n                    // This is a developer error. Don't stop the flow of the SDK.\r\n                    console.error(e);\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\r\n/**\r\n * An implementation of {@link PopupRedirectResolver} suitable for Cordova\r\n * based applications.\r\n *\r\n * @public\r\n */\r\nconst cordovaPopupRedirectResolver = CordovaPopupRedirectResolver;\r\nfunction generateNoEvent() {\r\n    return {\r\n        type: \"unknown\" /* AuthEventType.UNKNOWN */,\r\n        eventId: null,\r\n        sessionId: null,\r\n        urlResponse: null,\r\n        postBody: null,\r\n        tenantId: null,\r\n        error: _createError(\"no-auth-event\" /* AuthErrorCode.NO_AUTH_EVENT */)\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\r\n// It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it out\r\n// of autogenerated documentation pages to reduce accidental misuse.\r\nfunction addFrameworkForLogging(auth, framework) {\r\n    _castAuth(auth)._logFramework(framework);\r\n}\n\nexport { addFrameworkForLogging, cordovaPopupRedirectResolver };\n\n", "import firebase from '@firebase/app-compat';\nimport * as exp from '@firebase/auth/internal';\nimport { Component } from '@firebase/component';\nimport { isBrowserExtension, getUA, isReactNative, isNode, isIndexedDBAvailable, isIE, FirebaseError } from '@firebase/util';\n\nvar name = \"@firebase/auth-compat\";\nvar version = \"0.5.2\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst CORDOVA_ONDEVICEREADY_TIMEOUT_MS = 1000;\r\nfunction _getCurrentScheme() {\r\n    var _a;\r\n    return ((_a = self === null || self === void 0 ? void 0 : self.location) === null || _a === void 0 ? void 0 : _a.protocol) || null;\r\n}\r\n/**\r\n * @return {boolean} Whether the current environment is http or https.\r\n */\r\nfunction _isHttpOrHttps() {\r\n    return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\r\n}\r\n/**\r\n * @param {?string=} ua The user agent.\r\n * @return {boolean} Whether the app is rendered in a mobile iOS or Android\r\n *     Cordova environment.\r\n */\r\nfunction _isAndroidOrIosCordovaScheme(ua = getUA()) {\r\n    return !!((_getCurrentScheme() === 'file:' ||\r\n        _getCurrentScheme() === 'ionic:' ||\r\n        _getCurrentScheme() === 'capacitor:') &&\r\n        ua.toLowerCase().match(/iphone|ipad|ipod|android/));\r\n}\r\n/**\r\n * @return {boolean} Whether the environment is a native environment, where\r\n *     CORS checks do not apply.\r\n */\r\nfunction _isNativeEnvironment() {\r\n    return isReactNative() || isNode();\r\n}\r\n/**\r\n * Checks whether the user agent is IE11.\r\n * @return {boolean} True if it is IE11.\r\n */\r\nfunction _isIe11() {\r\n    return isIE() && (document === null || document === void 0 ? void 0 : document.documentMode) === 11;\r\n}\r\n/**\r\n * Checks whether the user agent is Edge.\r\n * @param {string} userAgent The browser user agent string.\r\n * @return {boolean} True if it is Edge.\r\n */\r\nfunction _isEdge(ua = getUA()) {\r\n    return /Edge\\/\\d+/.test(ua);\r\n}\r\n/**\r\n * @param {?string=} opt_userAgent The navigator user agent.\r\n * @return {boolean} Whether local storage is not synchronized between an iframe\r\n *     and a popup of the same domain.\r\n */\r\nfunction _isLocalStorageNotSynchronized(ua = getUA()) {\r\n    return _isIe11() || _isEdge(ua);\r\n}\r\n/** @return {boolean} Whether web storage is supported. */\r\nfunction _isWebStorageSupported() {\r\n    try {\r\n        const storage = self.localStorage;\r\n        const key = exp._generateEventId();\r\n        if (storage) {\r\n            // setItem will throw an exception if we cannot access WebStorage (e.g.,\r\n            // Safari in private mode).\r\n            storage['setItem'](key, '1');\r\n            storage['removeItem'](key);\r\n            // For browsers where iframe web storage does not synchronize with a popup\r\n            // of the same domain, indexedDB is used for persistent storage. These\r\n            // browsers include IE11 and Edge.\r\n            // Make sure it is supported (IE11 and Edge private mode does not support\r\n            // that).\r\n            if (_isLocalStorageNotSynchronized()) {\r\n                // In such browsers, if indexedDB is not supported, an iframe cannot be\r\n                // notified of the popup sign in result.\r\n                return isIndexedDBAvailable();\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    catch (e) {\r\n        // localStorage is not available from a worker. Test availability of\r\n        // indexedDB.\r\n        return _isWorker() && isIndexedDBAvailable();\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @param {?Object=} global The optional global scope.\r\n * @return {boolean} Whether current environment is a worker.\r\n */\r\nfunction _isWorker() {\r\n    // WorkerGlobalScope only defined in worker environment.\r\n    return (typeof global !== 'undefined' &&\r\n        'WorkerGlobalScope' in global &&\r\n        'importScripts' in global);\r\n}\r\nfunction _isPopupRedirectSupported() {\r\n    return ((_isHttpOrHttps() ||\r\n        isBrowserExtension() ||\r\n        _isAndroidOrIosCordovaScheme()) &&\r\n        // React Native with remote debugging reports its location.protocol as\r\n        // http.\r\n        !_isNativeEnvironment() &&\r\n        // Local storage has to be supported for browser popup and redirect\r\n        // operations to work.\r\n        _isWebStorageSupported() &&\r\n        // DOM, popups and redirects are not supported within a worker.\r\n        !_isWorker());\r\n}\r\n/** Quick check that indicates the platform *may* be Cordova */\r\nfunction _isLikelyCordova() {\r\n    return _isAndroidOrIosCordovaScheme() && typeof document !== 'undefined';\r\n}\r\nasync function _isCordova() {\r\n    if (!_isLikelyCordova()) {\r\n        return false;\r\n    }\r\n    return new Promise(resolve => {\r\n        const timeoutId = setTimeout(() => {\r\n            // We've waited long enough; the telltale Cordova event didn't happen\r\n            resolve(false);\r\n        }, CORDOVA_ONDEVICEREADY_TIMEOUT_MS);\r\n        document.addEventListener('deviceready', () => {\r\n            clearTimeout(timeoutId);\r\n            resolve(true);\r\n        });\r\n    });\r\n}\r\nfunction _getSelfWindow() {\r\n    return typeof window !== 'undefined' ? window : null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst Persistence = {\r\n    LOCAL: 'local',\r\n    NONE: 'none',\r\n    SESSION: 'session'\r\n};\r\nconst _assert$3 = exp._assert;\r\nconst PERSISTENCE_KEY = 'persistence';\r\n/**\r\n * Validates that an argument is a valid persistence value. If an invalid type\r\n * is specified, an error is thrown synchronously.\r\n */\r\nfunction _validatePersistenceArgument(auth, persistence) {\r\n    _assert$3(Object.values(Persistence).includes(persistence), auth, \"invalid-persistence-type\" /* exp.AuthErrorCode.INVALID_PERSISTENCE */);\r\n    // Validate if the specified type is supported in the current environment.\r\n    if (isReactNative()) {\r\n        // This is only supported in a browser.\r\n        _assert$3(persistence !== Persistence.SESSION, auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\r\n        return;\r\n    }\r\n    if (isNode()) {\r\n        // Only none is supported in Node.js.\r\n        _assert$3(persistence === Persistence.NONE, auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\r\n        return;\r\n    }\r\n    if (_isWorker()) {\r\n        // In a worker environment, either LOCAL or NONE are supported.\r\n        // If indexedDB not supported and LOCAL provided, throw an error\r\n        _assert$3(persistence === Persistence.NONE ||\r\n            (persistence === Persistence.LOCAL && isIndexedDBAvailable()), auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\r\n        return;\r\n    }\r\n    // This is restricted by what the browser supports.\r\n    _assert$3(persistence === Persistence.NONE || _isWebStorageSupported(), auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\r\n}\r\nasync function _savePersistenceForRedirect(auth) {\r\n    await auth._initializationPromise;\r\n    const session = getSessionStorageIfAvailable();\r\n    const key = exp._persistenceKeyName(PERSISTENCE_KEY, auth.config.apiKey, auth.name);\r\n    if (session) {\r\n        session.setItem(key, auth._getPersistence());\r\n    }\r\n}\r\nfunction _getPersistencesFromRedirect(apiKey, appName) {\r\n    const session = getSessionStorageIfAvailable();\r\n    if (!session) {\r\n        return [];\r\n    }\r\n    const key = exp._persistenceKeyName(PERSISTENCE_KEY, apiKey, appName);\r\n    const persistence = session.getItem(key);\r\n    switch (persistence) {\r\n        case Persistence.NONE:\r\n            return [exp.inMemoryPersistence];\r\n        case Persistence.LOCAL:\r\n            return [exp.indexedDBLocalPersistence, exp.browserSessionPersistence];\r\n        case Persistence.SESSION:\r\n            return [exp.browserSessionPersistence];\r\n        default:\r\n            return [];\r\n    }\r\n}\r\n/** Returns session storage, or null if the property access errors */\r\nfunction getSessionStorageIfAvailable() {\r\n    var _a;\r\n    try {\r\n        return ((_a = _getSelfWindow()) === null || _a === void 0 ? void 0 : _a.sessionStorage) || null;\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _assert$2 = exp._assert;\r\n/** Platform-agnostic popup-redirect resolver */\r\nclass CompatPopupRedirectResolver {\r\n    constructor() {\r\n        // Create both resolvers for dynamic resolution later\r\n        this.browserResolver = exp._getInstance(exp.browserPopupRedirectResolver);\r\n        this.cordovaResolver = exp._getInstance(exp.cordovaPopupRedirectResolver);\r\n        // The actual resolver in use: either browserResolver or cordovaResolver.\r\n        this.underlyingResolver = null;\r\n        this._redirectPersistence = exp.browserSessionPersistence;\r\n        this._completeRedirectFn = exp._getRedirectResult;\r\n        this._overrideRedirectResult = exp._overrideRedirectResult;\r\n    }\r\n    async _initialize(auth) {\r\n        await this.selectUnderlyingResolver();\r\n        return this.assertedUnderlyingResolver._initialize(auth);\r\n    }\r\n    async _openPopup(auth, provider, authType, eventId) {\r\n        await this.selectUnderlyingResolver();\r\n        return this.assertedUnderlyingResolver._openPopup(auth, provider, authType, eventId);\r\n    }\r\n    async _openRedirect(auth, provider, authType, eventId) {\r\n        await this.selectUnderlyingResolver();\r\n        return this.assertedUnderlyingResolver._openRedirect(auth, provider, authType, eventId);\r\n    }\r\n    _isIframeWebStorageSupported(auth, cb) {\r\n        this.assertedUnderlyingResolver._isIframeWebStorageSupported(auth, cb);\r\n    }\r\n    _originValidation(auth) {\r\n        return this.assertedUnderlyingResolver._originValidation(auth);\r\n    }\r\n    get _shouldInitProactively() {\r\n        return _isLikelyCordova() || this.browserResolver._shouldInitProactively;\r\n    }\r\n    get assertedUnderlyingResolver() {\r\n        _assert$2(this.underlyingResolver, \"internal-error\" /* exp.AuthErrorCode.INTERNAL_ERROR */);\r\n        return this.underlyingResolver;\r\n    }\r\n    async selectUnderlyingResolver() {\r\n        if (this.underlyingResolver) {\r\n            return;\r\n        }\r\n        // We haven't yet determined whether or not we're in Cordova; go ahead\r\n        // and determine that state now.\r\n        const isCordova = await _isCordova();\r\n        this.underlyingResolver = isCordova\r\n            ? this.cordovaResolver\r\n            : this.browserResolver;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction unwrap(object) {\r\n    return object.unwrap();\r\n}\r\nfunction wrapped(object) {\r\n    return object.wrapped();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction credentialFromResponse(userCredential) {\r\n    return credentialFromObject(userCredential);\r\n}\r\nfunction attachExtraErrorFields(auth, e) {\r\n    var _a;\r\n    // The response contains all fields from the server which may or may not\r\n    // actually match the underlying type\r\n    const response = (_a = e.customData) === null || _a === void 0 ? void 0 : _a._tokenResponse;\r\n    if ((e === null || e === void 0 ? void 0 : e.code) === 'auth/multi-factor-auth-required') {\r\n        const mfaErr = e;\r\n        mfaErr.resolver = new MultiFactorResolver(auth, exp.getMultiFactorResolver(auth, e));\r\n    }\r\n    else if (response) {\r\n        const credential = credentialFromObject(e);\r\n        const credErr = e;\r\n        if (credential) {\r\n            credErr.credential = credential;\r\n            credErr.tenantId = response.tenantId || undefined;\r\n            credErr.email = response.email || undefined;\r\n            credErr.phoneNumber = response.phoneNumber || undefined;\r\n        }\r\n    }\r\n}\r\nfunction credentialFromObject(object) {\r\n    const { _tokenResponse } = (object instanceof FirebaseError ? object.customData : object);\r\n    if (!_tokenResponse) {\r\n        return null;\r\n    }\r\n    // Handle phone Auth credential responses, as they have a different format\r\n    // from other backend responses (i.e. no providerId). This is also only the\r\n    // case for user credentials (does not work for errors).\r\n    if (!(object instanceof FirebaseError)) {\r\n        if ('temporaryProof' in _tokenResponse && 'phoneNumber' in _tokenResponse) {\r\n            return exp.PhoneAuthProvider.credentialFromResult(object);\r\n        }\r\n    }\r\n    const providerId = _tokenResponse.providerId;\r\n    // Email and password is not supported as there is no situation where the\r\n    // server would return the password to the client.\r\n    if (!providerId || providerId === exp.ProviderId.PASSWORD) {\r\n        return null;\r\n    }\r\n    let provider;\r\n    switch (providerId) {\r\n        case exp.ProviderId.GOOGLE:\r\n            provider = exp.GoogleAuthProvider;\r\n            break;\r\n        case exp.ProviderId.FACEBOOK:\r\n            provider = exp.FacebookAuthProvider;\r\n            break;\r\n        case exp.ProviderId.GITHUB:\r\n            provider = exp.GithubAuthProvider;\r\n            break;\r\n        case exp.ProviderId.TWITTER:\r\n            provider = exp.TwitterAuthProvider;\r\n            break;\r\n        default:\r\n            const { oauthIdToken, oauthAccessToken, oauthTokenSecret, pendingToken, nonce } = _tokenResponse;\r\n            if (!oauthAccessToken &&\r\n                !oauthTokenSecret &&\r\n                !oauthIdToken &&\r\n                !pendingToken) {\r\n                return null;\r\n            }\r\n            // TODO(avolkovi): uncomment this and get it working with SAML & OIDC\r\n            if (pendingToken) {\r\n                if (providerId.startsWith('saml.')) {\r\n                    return exp.SAMLAuthCredential._create(providerId, pendingToken);\r\n                }\r\n                else {\r\n                    // OIDC and non-default providers excluding Twitter.\r\n                    return exp.OAuthCredential._fromParams({\r\n                        providerId,\r\n                        signInMethod: providerId,\r\n                        pendingToken,\r\n                        idToken: oauthIdToken,\r\n                        accessToken: oauthAccessToken\r\n                    });\r\n                }\r\n            }\r\n            return new exp.OAuthProvider(providerId).credential({\r\n                idToken: oauthIdToken,\r\n                accessToken: oauthAccessToken,\r\n                rawNonce: nonce\r\n            });\r\n    }\r\n    return object instanceof FirebaseError\r\n        ? provider.credentialFromError(object)\r\n        : provider.credentialFromResult(object);\r\n}\r\nfunction convertCredential(auth, credentialPromise) {\r\n    return credentialPromise\r\n        .catch(e => {\r\n        if (e instanceof FirebaseError) {\r\n            attachExtraErrorFields(auth, e);\r\n        }\r\n        throw e;\r\n    })\r\n        .then(credential => {\r\n        const operationType = credential.operationType;\r\n        const user = credential.user;\r\n        return {\r\n            operationType,\r\n            credential: credentialFromResponse(credential),\r\n            additionalUserInfo: exp.getAdditionalUserInfo(credential),\r\n            user: User.getOrCreate(user)\r\n        };\r\n    });\r\n}\r\nasync function convertConfirmationResult(auth, confirmationResultPromise) {\r\n    const confirmationResultExp = await confirmationResultPromise;\r\n    return {\r\n        verificationId: confirmationResultExp.verificationId,\r\n        confirm: (verificationCode) => convertCredential(auth, confirmationResultExp.confirm(verificationCode))\r\n    };\r\n}\r\nclass MultiFactorResolver {\r\n    constructor(auth, resolver) {\r\n        this.resolver = resolver;\r\n        this.auth = wrapped(auth);\r\n    }\r\n    get session() {\r\n        return this.resolver.session;\r\n    }\r\n    get hints() {\r\n        return this.resolver.hints;\r\n    }\r\n    resolveSignIn(assertion) {\r\n        return convertCredential(unwrap(this.auth), this.resolver.resolveSignIn(assertion));\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass User {\r\n    constructor(_delegate) {\r\n        this._delegate = _delegate;\r\n        this.multiFactor = exp.multiFactor(_delegate);\r\n    }\r\n    static getOrCreate(user) {\r\n        if (!User.USER_MAP.has(user)) {\r\n            User.USER_MAP.set(user, new User(user));\r\n        }\r\n        return User.USER_MAP.get(user);\r\n    }\r\n    delete() {\r\n        return this._delegate.delete();\r\n    }\r\n    reload() {\r\n        return this._delegate.reload();\r\n    }\r\n    toJSON() {\r\n        return this._delegate.toJSON();\r\n    }\r\n    getIdTokenResult(forceRefresh) {\r\n        return this._delegate.getIdTokenResult(forceRefresh);\r\n    }\r\n    getIdToken(forceRefresh) {\r\n        return this._delegate.getIdToken(forceRefresh);\r\n    }\r\n    linkAndRetrieveDataWithCredential(credential) {\r\n        return this.linkWithCredential(credential);\r\n    }\r\n    async linkWithCredential(credential) {\r\n        return convertCredential(this.auth, exp.linkWithCredential(this._delegate, credential));\r\n    }\r\n    async linkWithPhoneNumber(phoneNumber, applicationVerifier) {\r\n        return convertConfirmationResult(this.auth, exp.linkWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\r\n    }\r\n    async linkWithPopup(provider) {\r\n        return convertCredential(this.auth, exp.linkWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\r\n    }\r\n    async linkWithRedirect(provider) {\r\n        await _savePersistenceForRedirect(exp._castAuth(this.auth));\r\n        return exp.linkWithRedirect(this._delegate, provider, CompatPopupRedirectResolver);\r\n    }\r\n    reauthenticateAndRetrieveDataWithCredential(credential) {\r\n        return this.reauthenticateWithCredential(credential);\r\n    }\r\n    async reauthenticateWithCredential(credential) {\r\n        return convertCredential(this.auth, exp.reauthenticateWithCredential(this._delegate, credential));\r\n    }\r\n    reauthenticateWithPhoneNumber(phoneNumber, applicationVerifier) {\r\n        return convertConfirmationResult(this.auth, exp.reauthenticateWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\r\n    }\r\n    reauthenticateWithPopup(provider) {\r\n        return convertCredential(this.auth, exp.reauthenticateWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\r\n    }\r\n    async reauthenticateWithRedirect(provider) {\r\n        await _savePersistenceForRedirect(exp._castAuth(this.auth));\r\n        return exp.reauthenticateWithRedirect(this._delegate, provider, CompatPopupRedirectResolver);\r\n    }\r\n    sendEmailVerification(actionCodeSettings) {\r\n        return exp.sendEmailVerification(this._delegate, actionCodeSettings);\r\n    }\r\n    async unlink(providerId) {\r\n        await exp.unlink(this._delegate, providerId);\r\n        return this;\r\n    }\r\n    updateEmail(newEmail) {\r\n        return exp.updateEmail(this._delegate, newEmail);\r\n    }\r\n    updatePassword(newPassword) {\r\n        return exp.updatePassword(this._delegate, newPassword);\r\n    }\r\n    updatePhoneNumber(phoneCredential) {\r\n        return exp.updatePhoneNumber(this._delegate, phoneCredential);\r\n    }\r\n    updateProfile(profile) {\r\n        return exp.updateProfile(this._delegate, profile);\r\n    }\r\n    verifyBeforeUpdateEmail(newEmail, actionCodeSettings) {\r\n        return exp.verifyBeforeUpdateEmail(this._delegate, newEmail, actionCodeSettings);\r\n    }\r\n    get emailVerified() {\r\n        return this._delegate.emailVerified;\r\n    }\r\n    get isAnonymous() {\r\n        return this._delegate.isAnonymous;\r\n    }\r\n    get metadata() {\r\n        return this._delegate.metadata;\r\n    }\r\n    get phoneNumber() {\r\n        return this._delegate.phoneNumber;\r\n    }\r\n    get providerData() {\r\n        return this._delegate.providerData;\r\n    }\r\n    get refreshToken() {\r\n        return this._delegate.refreshToken;\r\n    }\r\n    get tenantId() {\r\n        return this._delegate.tenantId;\r\n    }\r\n    get displayName() {\r\n        return this._delegate.displayName;\r\n    }\r\n    get email() {\r\n        return this._delegate.email;\r\n    }\r\n    get photoURL() {\r\n        return this._delegate.photoURL;\r\n    }\r\n    get providerId() {\r\n        return this._delegate.providerId;\r\n    }\r\n    get uid() {\r\n        return this._delegate.uid;\r\n    }\r\n    get auth() {\r\n        return this._delegate.auth;\r\n    }\r\n}\r\n// Maintain a map so that there's always a 1:1 mapping between new User and\r\n// legacy compat users\r\nUser.USER_MAP = new WeakMap();\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _assert$1 = exp._assert;\r\nclass Auth {\r\n    constructor(app, provider) {\r\n        this.app = app;\r\n        if (provider.isInitialized()) {\r\n            this._delegate = provider.getImmediate();\r\n            this.linkUnderlyingAuth();\r\n            return;\r\n        }\r\n        const { apiKey } = app.options;\r\n        // TODO: platform needs to be determined using heuristics\r\n        _assert$1(apiKey, \"invalid-api-key\" /* exp.AuthErrorCode.INVALID_API_KEY */, {\r\n            appName: app.name\r\n        });\r\n        // TODO: platform needs to be determined using heuristics\r\n        _assert$1(apiKey, \"invalid-api-key\" /* exp.AuthErrorCode.INVALID_API_KEY */, {\r\n            appName: app.name\r\n        });\r\n        // Only use a popup/redirect resolver in browser environments\r\n        const resolver = typeof window !== 'undefined' ? CompatPopupRedirectResolver : undefined;\r\n        this._delegate = provider.initialize({\r\n            options: {\r\n                persistence: buildPersistenceHierarchy(apiKey, app.name),\r\n                popupRedirectResolver: resolver\r\n            }\r\n        });\r\n        this._delegate._updateErrorMap(exp.debugErrorMap);\r\n        this.linkUnderlyingAuth();\r\n    }\r\n    get emulatorConfig() {\r\n        return this._delegate.emulatorConfig;\r\n    }\r\n    get currentUser() {\r\n        if (!this._delegate.currentUser) {\r\n            return null;\r\n        }\r\n        return User.getOrCreate(this._delegate.currentUser);\r\n    }\r\n    get languageCode() {\r\n        return this._delegate.languageCode;\r\n    }\r\n    set languageCode(languageCode) {\r\n        this._delegate.languageCode = languageCode;\r\n    }\r\n    get settings() {\r\n        return this._delegate.settings;\r\n    }\r\n    get tenantId() {\r\n        return this._delegate.tenantId;\r\n    }\r\n    set tenantId(tid) {\r\n        this._delegate.tenantId = tid;\r\n    }\r\n    useDeviceLanguage() {\r\n        this._delegate.useDeviceLanguage();\r\n    }\r\n    signOut() {\r\n        return this._delegate.signOut();\r\n    }\r\n    useEmulator(url, options) {\r\n        exp.connectAuthEmulator(this._delegate, url, options);\r\n    }\r\n    applyActionCode(code) {\r\n        return exp.applyActionCode(this._delegate, code);\r\n    }\r\n    checkActionCode(code) {\r\n        return exp.checkActionCode(this._delegate, code);\r\n    }\r\n    confirmPasswordReset(code, newPassword) {\r\n        return exp.confirmPasswordReset(this._delegate, code, newPassword);\r\n    }\r\n    async createUserWithEmailAndPassword(email, password) {\r\n        return convertCredential(this._delegate, exp.createUserWithEmailAndPassword(this._delegate, email, password));\r\n    }\r\n    fetchProvidersForEmail(email) {\r\n        return this.fetchSignInMethodsForEmail(email);\r\n    }\r\n    fetchSignInMethodsForEmail(email) {\r\n        return exp.fetchSignInMethodsForEmail(this._delegate, email);\r\n    }\r\n    isSignInWithEmailLink(emailLink) {\r\n        return exp.isSignInWithEmailLink(this._delegate, emailLink);\r\n    }\r\n    async getRedirectResult() {\r\n        _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* exp.AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n        const credential = await exp.getRedirectResult(this._delegate, CompatPopupRedirectResolver);\r\n        if (!credential) {\r\n            return {\r\n                credential: null,\r\n                user: null\r\n            };\r\n        }\r\n        return convertCredential(this._delegate, Promise.resolve(credential));\r\n    }\r\n    // This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\r\n    // It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it\r\n    // out of autogenerated documentation pages to reduce accidental misuse.\r\n    addFrameworkForLogging(framework) {\r\n        exp.addFrameworkForLogging(this._delegate, framework);\r\n    }\r\n    onAuthStateChanged(nextOrObserver, errorFn, completed) {\r\n        const { next, error, complete } = wrapObservers(nextOrObserver, errorFn, completed);\r\n        return this._delegate.onAuthStateChanged(next, error, complete);\r\n    }\r\n    onIdTokenChanged(nextOrObserver, errorFn, completed) {\r\n        const { next, error, complete } = wrapObservers(nextOrObserver, errorFn, completed);\r\n        return this._delegate.onIdTokenChanged(next, error, complete);\r\n    }\r\n    sendSignInLinkToEmail(email, actionCodeSettings) {\r\n        return exp.sendSignInLinkToEmail(this._delegate, email, actionCodeSettings);\r\n    }\r\n    sendPasswordResetEmail(email, actionCodeSettings) {\r\n        return exp.sendPasswordResetEmail(this._delegate, email, actionCodeSettings || undefined);\r\n    }\r\n    async setPersistence(persistence) {\r\n        _validatePersistenceArgument(this._delegate, persistence);\r\n        let converted;\r\n        switch (persistence) {\r\n            case Persistence.SESSION:\r\n                converted = exp.browserSessionPersistence;\r\n                break;\r\n            case Persistence.LOCAL:\r\n                // Not using isIndexedDBAvailable() since it only checks if indexedDB is defined.\r\n                const isIndexedDBFullySupported = await exp\r\n                    ._getInstance(exp.indexedDBLocalPersistence)\r\n                    ._isAvailable();\r\n                converted = isIndexedDBFullySupported\r\n                    ? exp.indexedDBLocalPersistence\r\n                    : exp.browserLocalPersistence;\r\n                break;\r\n            case Persistence.NONE:\r\n                converted = exp.inMemoryPersistence;\r\n                break;\r\n            default:\r\n                return exp._fail(\"argument-error\" /* exp.AuthErrorCode.ARGUMENT_ERROR */, {\r\n                    appName: this._delegate.name\r\n                });\r\n        }\r\n        return this._delegate.setPersistence(converted);\r\n    }\r\n    signInAndRetrieveDataWithCredential(credential) {\r\n        return this.signInWithCredential(credential);\r\n    }\r\n    signInAnonymously() {\r\n        return convertCredential(this._delegate, exp.signInAnonymously(this._delegate));\r\n    }\r\n    signInWithCredential(credential) {\r\n        return convertCredential(this._delegate, exp.signInWithCredential(this._delegate, credential));\r\n    }\r\n    signInWithCustomToken(token) {\r\n        return convertCredential(this._delegate, exp.signInWithCustomToken(this._delegate, token));\r\n    }\r\n    signInWithEmailAndPassword(email, password) {\r\n        return convertCredential(this._delegate, exp.signInWithEmailAndPassword(this._delegate, email, password));\r\n    }\r\n    signInWithEmailLink(email, emailLink) {\r\n        return convertCredential(this._delegate, exp.signInWithEmailLink(this._delegate, email, emailLink));\r\n    }\r\n    signInWithPhoneNumber(phoneNumber, applicationVerifier) {\r\n        return convertConfirmationResult(this._delegate, exp.signInWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\r\n    }\r\n    async signInWithPopup(provider) {\r\n        _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* exp.AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n        return convertCredential(this._delegate, exp.signInWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\r\n    }\r\n    async signInWithRedirect(provider) {\r\n        _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* exp.AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n        await _savePersistenceForRedirect(this._delegate);\r\n        return exp.signInWithRedirect(this._delegate, provider, CompatPopupRedirectResolver);\r\n    }\r\n    updateCurrentUser(user) {\r\n        // remove ts-ignore once overloads are defined for exp functions to accept compat objects\r\n        // @ts-ignore\r\n        return this._delegate.updateCurrentUser(user);\r\n    }\r\n    verifyPasswordResetCode(code) {\r\n        return exp.verifyPasswordResetCode(this._delegate, code);\r\n    }\r\n    unwrap() {\r\n        return this._delegate;\r\n    }\r\n    _delete() {\r\n        return this._delegate._delete();\r\n    }\r\n    linkUnderlyingAuth() {\r\n        this._delegate.wrapped = () => this;\r\n    }\r\n}\r\nAuth.Persistence = Persistence;\r\nfunction wrapObservers(nextOrObserver, error, complete) {\r\n    let next = nextOrObserver;\r\n    if (typeof nextOrObserver !== 'function') {\r\n        ({ next, error, complete } = nextOrObserver);\r\n    }\r\n    // We know 'next' is now a function\r\n    const oldNext = next;\r\n    const newNext = (user) => oldNext(user && User.getOrCreate(user));\r\n    return {\r\n        next: newNext,\r\n        error: error,\r\n        complete\r\n    };\r\n}\r\nfunction buildPersistenceHierarchy(apiKey, appName) {\r\n    // Note this is slightly different behavior: in this case, the stored\r\n    // persistence is checked *first* rather than last. This is because we want\r\n    // to prefer stored persistence type in the hierarchy. This is an empty\r\n    // array if window is not available or there is no pending redirect\r\n    const persistences = _getPersistencesFromRedirect(apiKey, appName);\r\n    // If \"self\" is available, add indexedDB\r\n    if (typeof self !== 'undefined' &&\r\n        !persistences.includes(exp.indexedDBLocalPersistence)) {\r\n        persistences.push(exp.indexedDBLocalPersistence);\r\n    }\r\n    // If \"window\" is available, add HTML Storage persistences\r\n    if (typeof window !== 'undefined') {\r\n        for (const persistence of [\r\n            exp.browserLocalPersistence,\r\n            exp.browserSessionPersistence\r\n        ]) {\r\n            if (!persistences.includes(persistence)) {\r\n                persistences.push(persistence);\r\n            }\r\n        }\r\n    }\r\n    // Add in-memory as a final fallback\r\n    if (!persistences.includes(exp.inMemoryPersistence)) {\r\n        persistences.push(exp.inMemoryPersistence);\r\n    }\r\n    return persistences;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PhoneAuthProvider {\r\n    constructor() {\r\n        this.providerId = 'phone';\r\n        // TODO: remove ts-ignore when moving types from auth-types to auth-compat\r\n        // @ts-ignore\r\n        this._delegate = new exp.PhoneAuthProvider(unwrap(firebase.auth()));\r\n    }\r\n    static credential(verificationId, verificationCode) {\r\n        return exp.PhoneAuthProvider.credential(verificationId, verificationCode);\r\n    }\r\n    verifyPhoneNumber(phoneInfoOptions, applicationVerifier) {\r\n        return this._delegate.verifyPhoneNumber(\r\n        // The implementation matches but the types are subtly incompatible\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        phoneInfoOptions, applicationVerifier);\r\n    }\r\n    unwrap() {\r\n        return this._delegate;\r\n    }\r\n}\r\nPhoneAuthProvider.PHONE_SIGN_IN_METHOD = exp.PhoneAuthProvider.PHONE_SIGN_IN_METHOD;\r\nPhoneAuthProvider.PROVIDER_ID = exp.PhoneAuthProvider.PROVIDER_ID;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _assert = exp._assert;\r\nclass RecaptchaVerifier {\r\n    constructor(container, parameters, app = firebase.app()) {\r\n        var _a;\r\n        // API key is required for web client RPC calls.\r\n        _assert((_a = app.options) === null || _a === void 0 ? void 0 : _a.apiKey, \"invalid-api-key\" /* exp.AuthErrorCode.INVALID_API_KEY */, {\r\n            appName: app.name\r\n        });\r\n        this._delegate = new exp.RecaptchaVerifier(\r\n        // TODO: remove ts-ignore when moving types from auth-types to auth-compat\r\n        // @ts-ignore\r\n        app.auth(), container, \r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        parameters);\r\n        this.type = this._delegate.type;\r\n    }\r\n    clear() {\r\n        this._delegate.clear();\r\n    }\r\n    render() {\r\n        return this._delegate.render();\r\n    }\r\n    verify() {\r\n        return this._delegate.verify();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst AUTH_TYPE = 'auth-compat';\r\n// Create auth components to register with firebase.\r\n// Provides Auth public APIs.\r\nfunction registerAuthCompat(instance) {\r\n    instance.INTERNAL.registerComponent(new Component(AUTH_TYPE, container => {\r\n        // getImmediate for FirebaseApp will always succeed\r\n        const app = container.getProvider('app-compat').getImmediate();\r\n        const authProvider = container.getProvider('auth');\r\n        return new Auth(app, authProvider);\r\n    }, \"PUBLIC\" /* ComponentType.PUBLIC */)\r\n        .setServiceProps({\r\n        ActionCodeInfo: {\r\n            Operation: {\r\n                EMAIL_SIGNIN: exp.ActionCodeOperation.EMAIL_SIGNIN,\r\n                PASSWORD_RESET: exp.ActionCodeOperation.PASSWORD_RESET,\r\n                RECOVER_EMAIL: exp.ActionCodeOperation.RECOVER_EMAIL,\r\n                REVERT_SECOND_FACTOR_ADDITION: exp.ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION,\r\n                VERIFY_AND_CHANGE_EMAIL: exp.ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL,\r\n                VERIFY_EMAIL: exp.ActionCodeOperation.VERIFY_EMAIL\r\n            }\r\n        },\r\n        EmailAuthProvider: exp.EmailAuthProvider,\r\n        FacebookAuthProvider: exp.FacebookAuthProvider,\r\n        GithubAuthProvider: exp.GithubAuthProvider,\r\n        GoogleAuthProvider: exp.GoogleAuthProvider,\r\n        OAuthProvider: exp.OAuthProvider,\r\n        SAMLAuthProvider: exp.SAMLAuthProvider,\r\n        PhoneAuthProvider: PhoneAuthProvider,\r\n        PhoneMultiFactorGenerator: exp.PhoneMultiFactorGenerator,\r\n        RecaptchaVerifier: RecaptchaVerifier,\r\n        TwitterAuthProvider: exp.TwitterAuthProvider,\r\n        Auth,\r\n        AuthCredential: exp.AuthCredential,\r\n        Error: FirebaseError\r\n    })\r\n        .setInstantiationMode(\"LAZY\" /* InstantiationMode.LAZY */)\r\n        .setMultipleInstances(false));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterAuthCompat(firebase);\n\n"],
  "mappings": "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",
  "names": ["storage", "PhoneAuthProvider", "_assert", "RecaptchaVerifier"]
}
